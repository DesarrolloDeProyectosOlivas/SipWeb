<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gUfBhYwaQ4hWQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAABqSURBVDhP
        pZPRCcAgDEQdxdEdpZvFpLQQyeU0+ECR3D3BD5uIDF29FTHH3P/wVC4JThgQ0m4aOLYdVmDZAiqiGcUL
        /vzFZzixLhtXFzi5/gQkoBmEFVn2si0oaScNAKEbBgcsjm4X31nGBJh4JYhYblbkAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Caywwv8B/0tMxBqISF4AAAAASUVORK5CYII=
</value>
  </data>
</root>